#I დავალება: მომხმარებელს შემოატანინეთ ორი რიცხვი, შეადარეთ ეს ორი რიცხვი ერთმანეთს (გამოიყენეთ შედარების ოპერატორები(>, <, ==).
# ორი რიცხვის შეყვანა:
num1 = float(input("Type in first number: "))
num2 = int(input("Type in second number: "))

# შედარება:
print(num1 > num2)
print(num1 < num2)
print(num1 == num2)


#II დავალება: შექმენით 5 ცვლადი, 3 ცვლადში შეინახეთ რიცხვები რომლებიც იქნებაინ სტრინგის ტიპის, დანარჩენ 2 ცვლადში შეინახეთ ჩვეულებრიბი ინტეჯერები, შენი დავალებაა იპოვო ამ ხუთი რიცხვის ნამრავლი,შემდეგ ეს ნამრავლი გაყავი რიცხვების რაოდენობაზე და დაპრინტე საბოლოო შედეგი, გამოიყენე შეაბამისი ფუნქცია რომ გადააქციო სტრინგი რიცხვები ინტეჯერად.
# სტრინგები:
string_num1 = "4"
string_num2 = "3"
string_num3 = "2"

# ინტეჯერები:
integer_num1 = 4
integer_num2 = 2

# სტრინგების გარდაქმნა ინტეჯერებად:
num1 = int(string_num1)
num2 = int(string_num2)
num3 = int(string_num3)

# ყველა რიცხვის ნამრავლი:
Multiplication = num1 * num2 * num3 * integer_num1 * integer_num2

# ნამრავლის გაყოფა რიცხვების რაოდენობაზე:
average = Multiplication / 5

# შედეგის დაბეჭდვა:
print(average)


#III დავალება: მომხმარებელს შემოატანინეთ სამი სტრინგ ტიპის მნიშვნელობა ასევე შემოატანინეთ ერთი ინტეჯერი, თქენი დავალებაა მომხმარებლის მიერ შემოყვანილ სამ სტრინგზე მოახდინოთ კონკატინაცია და შეინახოთ ცალკე ცვლადში ეს სამი გადაბმული სტრინგი, კონკატინაციის შემდეგ კი გაამრავლეთ ეს მთლიანი სტრინგი მომხმარებლის მიერ შემოყვანილ რიცხვზე.
# სტრინგები:
string1 = input("Type in first number: ")
string2 = input("Type in second number: ")
string3 = input("Type in third number: ")

# ინტეჯერები:
num = int(input("Put in number: "))

# კონკატინაცია:
combined_string = string1 + string2 + string3

# სტრინგის გამრავლება ინტეჯერ რიცხვზე:
result = combined_string * num

# შედეგის დაბეჭდვა:
print(result)


#IV დავალება: კომენტარის სახით ახსენით თუ რომელი ლოგიკური ოპერატორები ვისწავლეთ და რომელი ოპერატორის დროს რას უფრო ენიჭება უპირატესობა (True , False) და რატომ.
# ჩვენ ვისწავლეთ "and" და "or" ლოგიკური ოპერატორები.

# "and"-ის დროს:
# False-ს ენიჭება უპირატესობა, რადგან თუ ერთ-ერთი მნიშვნელობა False-ია, მთელი ოპერაცია False გახდება.

# "or"-ის დროს:
# True-ს ენიჭება უპირატესობა, რადგან თუ რომელიმე True-ა, მაშინ მთელი ოპერაციაც True გახდება.


#V დავალება: გვერდით მიუწერეთ რას გამოიტანს შემეგი ოპერაციები.

# "and" ოპერატორის გამოყენების დროს, თუ ერთი პირობა მაინც არის მცდარი (ანუ False), ყველა პირობა იქნება მცდარი.
#        (and)
# True and True   -- True       ორივე მხარეა True, ამიტომ შედეგიც იქნება True.
# True and False  -- False      ერთ მხარეს False არის, ამიტომ შედეგი იქნება False.
# False and True  -- False      ერთ მხარეს False არის, ამიტომ შედეგი იქნება False.
# False and False -- False      ორივე False არის, ამიტომ შედეგიც იქნება False.

# "or" ოპერატორის გამოყენების დროს, თუ ერთი პირობა მაინც არის ჭეშმარიტი (ანუ True), ყველა პირობა იქნება ჭეშმარიტი.
#        (or)
# True or True   -- True        ორივე მხარეა True, ამიტომ შედეგიც იქნება True.
# True or False  -- True        ერთ მხარეს True არის, ამიტომ შედეგი იქნება True.
# False or True  -- True        ერთ მხარეს True არის, ამიტომ შედეგი იქნება True.
# False or False -- False       ორივე False არის, ამიტომ შედეგიც იქნება False.


#VI დავალება: მოიყვანე მაგალითები and და or ოპერატორებზე, დაპრინტე და გაუშვით ტერმინალში და ნახეთ შედეგი.
# "and" ოპერატორის:
num1 = 900
num2 = 67

print(num1 > 0 and num2 > 0)
print(num1 > 0 and num2 < 0)
print(num1 < 0 and num2 < 0)

# "or" ოპერატორის:
Num = 6.7
NUM = -25.8

print(Num > 0 or NUM > 0)
print(Num < 0 or NUM > 0)
print(Num < 0 or NUM < 0)


#VII დავალება: შექმენი 4 ცვლადი სადაც შეინახავთ სხვადასხვა მონაცემთა ტიპებს და შენი დავალებაა რომ გაიგო ამ ცვლადებში შენახული მონაცემების ტიპები(გამოიყენეთ შესაბამისი ფუნქცია).
# 4 ცვლადი სხვადასხვა ტიპის მონაცემით:
name = "Luka"
number = 4259
price = 4.50
microphone_muted = True

# მონაცემთა ტიპების დაბეჭდვა:
print(type(name))
print(type(number))
print(type(price))
print(type(microphone_muted))


#VIII დავალება: მომხმარებელს შემოატანინე 3 მნიშნველობა, ერთის ტიპი იყოს float ერთის integer ერთის string და დაპრინტეთ ისინი (გამოიყენეთ შესაბამისი ფუნქციები რომ შემოყვანილ მნიშვნელობებს ქონდეთ შესაბამისი ტიპი (note: მომხმარებელს რომ შემოყავს მნიშვნელობა თავიდან ყოველთვის არის სტრინგი), თუ ფლოათს შემოიყვანს მომხმარებელი გახადეთ ინფუთი ბულეან ტიპის თუ ინტეჯერს შემოიყვანს გახადეთ ინფუთი ინტეჯერ ტიპის.
# სამი მნიშვნელობის შემოტანა:
float_input = input("Enter a float value: ")
integer_input = input("Enter an integer value: ")
string_input = input("Enter a string value: ")

# გარდაქმნა შესაბამის ტიპებად:
# float ტიპის მნიშვნელობა გარდაქმნის შემდეგ ხდება boolean
float_to_boolean = bool(float_input)

# integer ტიპის მნიშვნელობა გარდაქმნის შემდეგ ხდება integer
integer_to_integer = int(integer_input)

# string ტიპის მნიშვნელობა რჩება string-ად
string_value = str(string_input)

# შედეგების დაბეჭდვა:
print(float_to_boolean)
print(integer_to_integer)
print(string_value)